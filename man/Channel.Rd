% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rabbitr.R
\name{Channel}
\alias{Channel}
\title{RabbitMQ Channel object}
\description{
This class defines all AMQP Channel methods and functionality.
}
\section{Usage}{

For more details see \bold{Methods, Arguments and Examples} sections.
\preformatted{
conn <- rabbitr()
chan <- conn$channel()
chan$exchange_declare(exchange, type, passive=FALSE,
                   durable=FALSE, auto_delete=FALSE)
chan$exchange_bind(destination, source, routing_key)
chan$exchange_unbind(destination, source, routing_key)
chan$exchange_delete(exchange, if_unused=FALSE)

chan$queue_declare(queue="", passive=FALSE,
                   durable=FALSE, auto_delete=FALSE)
chan$queue_bind(queue, exchange, routing_key)
chan$queue_unbind(queue, exchange, routing_key)
chan$queue_purge(queue)
chan$queue_delete(queue, if_unused=FALSE, if_empty=FALSE)

chan$basic_consume(queue="", consumer_tag="",
                   no_ack=FALSE, exclusive=FALSE)
chan$basic_get(queue, no_ack=FALSE)
chan$basic_ack(delivery_tag, multiple=FALSE)
chan$basic_qos(prefetch_size=0, prefetch_count=0, global=FALSE)
chan$basic_reject(delivery_tag, requeue=TRUE)
chan$basic_recover(requeue=TRUE)
chan$basic_publish(exchange, routing_key, body, 
                   properties=message_properties(),
                   mandatory=FALSE, immediate=FALSE)

chan$listen(callback, timeout=NULL)
}
}

\section{Methods}{

\describe{
   \item{\code{$new(conn, channel_number)}}{Create new Channel instance. This 
         should not be used directly. Instead, construct the channel by 
         calling the active connection `$channel()` method.}
   \item{\code{$exchange_declare()}}{Declare/create exchange.}
   \item{\code{$exchange_delete()}}{Delete exchange.}
   \item{\code{$exchange_bind()}}{Bind exchange to another exchange.}
   \item{\code{$exchange_unbind()}}{Unbind exchange from another exchange.}
   \item{\code{$queue_declare()}}{Declare/create queue.}
   \item{\code{$queue_delete()}}{Delete queue.}
   \item{\code{$queue_purge()}}{Purge all messages from specified queue.}
   \item{\code{$queue_bind()}}{Bind queue to exchange.}
   \item{\code{$queue_unbind()}}{Unbind queue from a exchange.}
   \item{\code{$basic_consume()}}{Sends the AMQP 0-9-1 Basic.Consume 
   command to broker.}
   \item{\code{$basic_get()}}{Get a single message from the AMQP broker.}
   \item{\code{$basic_ack()}}{Acknowledge one or more messages.}
   \item{\code{$basic_qos()}}{Specify quality of service.}
   \item{\code{$basic_reject()}}{Reject an incoming message.}
   \item{\code{$basic_recover()}}{Ask server to redeliver all unacknowledged 
    messages on Channel.}
   \item{\code{$basic_publish()}}{Publish to the channel with the given
   exchange, routing_key and message body.}
}
}

